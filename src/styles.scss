@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import url('https://use.typekit.net/gsz0xik.css');
@import url('https://fonts.googleapis.com/css2?family=Karla:wght@700&display=swap');
@import './variables.scss';

html {
	font-size: 9px;

	@media only screen and (max-width: 1920px) {
		font-size: 8px;
	}
}

body,
div,
h1,
h2,
h3,
h4,
h5,
h6,
span,
ul,
ol,
li,
a,
label,
textarea,
input {
	margin: 0;
	padding: 0;
	display: block;
	box-sizing: border-box;
	font-family: 'noto-sans', sans-serif;
	-webkit-font-smoothing: antialiased;
}

body {
	overflow-y: hidden;
}

svg {
	display: block;
	width: 100%;
	height: 100%;
}

textarea {
	resize: none;
	margin: 0;
}

span,
p {
	font-size: 1.4rem;
	padding: 0;
	margin: 0;
}

.label {
	font-size: 1.2rem;
	text-transform: uppercase;
	font-weight: bold;
	color: $color-tertiary;

	&.inset {
		@apply ml-6 pb-2;
	}
}

img {
	position: relative;
	display: inline-flex;
}

h1,
.h1 {
	@apply text-primary;
	@apply dark:text-white;
	font-size: 3.2rem;
	font-family: 'Karla', 'sans-serif';
	font-weight: 700;
}

h2,
.h2,
h2 > span {
	@apply text-primary;
	@apply dark:text-white;
	font-size: 2.8rem;
	font-family: 'Karla', 'sans-serif';
	font-weight: 700;
	display: inline-flex;
}

h3,
.h3 {
	@apply text-primary;
	@apply dark:text-white;
	font-size: 2.4rem;
	font-weight: 500;
	font-family: 'Karla', 'sans-serif';
	font-weight: 700;
}

a {
	text-decoration: none;
	font-size: 1.6rem;
	color: $color-black;
	cursor: pointer;
	transition: all 0.1s;
	@apply text-primary;
	@apply dark:text-white;

	&:hover {
		text-decoration: underline;
	}

	&:focus,
	&:focus-visible {
		outline: none;
		border: none;
	}
}

input[type='text'],
input[type='datetime-local'],
input[type='time'],
textarea,
input,
.input {
	padding: 0.8rem 1.5rem;
	border: none;
	outline: none;
	border-radius: 0.5rem;
	font-size: 1.8rem;
	@apply dark:bg-black;
	@apply dark:text-white;
}

.edit {
	transition: background-color 0.2s ease-in-out;

	&.with-background {
		@apply bg-grey-very-light;
	}

	&:hover,
	&:focus {
		background-color: $color-light-grey;
		@apply dark:bg-grey-very-dark;
	}
}

.inset-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.center-x {
	left: 50%;
	transform: translate(-50%);
}

.w-128 {
	width: 32rem;
}

.ng-select {
	.ng-input {
		top: auto !important;
		padding: 0 1.5rem !important;
	}

	&.ng-select-opened .ng-select-container,
	&.ng-select-focused .ng-select-container {
		box-shadow: none !important;
		background-color: $color-light-grey;
		background: $color-light-grey !important;
	}

	.ng-select-container {
		height: auto !important;
		width: auto !important;
		border: none !important;
		outline: none !important;
		box-shadow: none !important;
		transition: background-color 0.2s ease-in-out;
		border-radius: 0.5rem;

		&:hover,
		&:focus {
			box-shadow: none !important;
			background-color: $color-light-grey;
			background: $color-light-grey !important;
		}

		input {
			cursor: text !important;
			border-radius: 0 !important;
		}

		.ng-value-container {
			.ng-value-label.ng-star-inserted {
				font-size: 1.8rem;
				color: $color-black;
			}

			padding: 0.8rem 1.5rem;
		}

		.ng-arrow-wrapper,
		.ng-clear-wrapper {
			display: none;
		}
	}

	.ng-dropdown-panel {
		background-color: $color-white;
		&,
		.ng-dropdown-panel-items {
			border-bottom-left-radius: 1.5rem;
			border-bottom-right-radius: 0.5rem;
			border: none;
			box-shadow: $box-shadow;
		}

		.ng-option-label {
			font-size: 1.8rem;
			font-weight: inherit !important;
		}

		.ng-option {
			font-size: 1.8rem;
			padding: 1rem 0;
			padding-left: calc(1.5rem - 1px);
			padding-right: calc(1.5rem - 1px);

			&:hover {
				background-color: $color-very-light-grey;

				&.ng-option-selected {
					.ng-option-label {
						font-weight: inherit;
					}
				}
			}

			&.ng-option-selected {
				background-color: $color-light-grey !important;

				.ng-option-label {
					font-weight: inherit;
				}
			}
		}
	}
}

ul.splide__pagination {
	position: relative;
	margin-top: 2rem;
	display: flex;
	flex-flow: row;

	li {
		button.splide__pagination__page {
			opacity: 1;

			&.is-active {
				transform: scale(1.2);
				background-color: $color-primary;
			}
		}

		&:last-child:first-child {
			display: none;
		}
	}
}

.splide__arrow {
	background-color: transparent;

	svg {
		fill: $color-primary;
	}

	&--prev {
		left: -3rem;
	}

	&--next {
		right: -3rem;
	}

	&:hover {
		background-color: transparent;
	}

	&:disabled {
		background-color: transparent;
		svg {
			fill: $color-light-grey;
		}
	}
}

button,
a.btn,
input[type='submit'] {
	appearance: none;
	border: none;
	display: inline-flex;
	background-color: $color-primary;
	box-sizing: border-box;
	border-radius: 0.5rem;
	color: $color-white;
	padding: 0.8rem 1.4rem;
	cursor: pointer;
	user-select: none;
	transition: background-color 0.2s;
	font-size: 1.6rem;
	line-height: 1;
	margin: auto 0;

	span {
		display: inline-flex;
		font-size: inherit;
		vertical-align: middle;
		white-space: nowrap;
	}

	.img {
		fill: $color-white;
		display: inline-flex;
		width: 1.4rem;
		height: 1.4rem;
		margin: auto 0.5rem auto 0;
	}

	&.icon-only {
		.img {
			margin: 0;
		}
	}

	&:focus {
		outline: none;
	}

	&:hover {
		background-color: $color-primary-light;
		text-decoration: none;
	}

	&.large {
		font-size: 1.8rem;
		padding: 1rem 2.6rem;
		border: none;

		.img {
			width: 1.2rem;
			height: 1.2rem;
		}
	}

	&.filter {
		border-radius: 3.5rem;
		padding: 1.5rem 2.5rem;
		font-size: 1.6rem;
		background-color: $color-light-grey;
		color: $color-black;

		.img {
			fill: $color-black;
		}

		&:hover:not(.active) {
			background-color: $color-primary-light;
			color: $color-white;

			.img {
				fill: $color-white;
			}
		}

		&.active {
			background-color: $color-primary;
			color: $color-white;
			cursor: default;

			.img {
				fill: $color-white;
			}
		}
	}

	&.tiny-button {
		display: flex;
		width: 3.5rem;
		height: 3.5rem;
		text-align: center;
		border-radius: 3rem;
		background-color: $color-primary;
		padding: 0;
		user-select: none;

		.img {
			display: flex;
			width: 1.45rem;
			height: 1.45rem;
			margin: auto;
		}

		&.smaller {
			width: 2.8rem;
			height: 2.8rem;
		}

		&.no-background {
			background: transparent;
			transition: background-color 0.2s ease-in-out;

			&:hover:not(:disabled) {
				background-color: $color-light-grey;
			}

			.img {
				width: 2.5rem;
				height: 2.5rem;
			}
		}
	}

	&.with-border {
		border: 1px solid $color-primary;
		background-color: transparent;
		color: $color-primary;

		.img {
			fill: $color-primary;
		}
	}

	&.secondary {
		@apply bg-secondary;
		@apply text-primary;

		.img {
			@apply fill-current;
		}
	}

	&:disabled,
	&[disabled] {
		background-color: $color-light-grey;
		color: $color-tertiary;
		cursor: default;
		border: none;

		.img,
		&.no-background .img {
			fill: $color-tertiary !important;
		}
	}
}

::-moz-progress-bar {
	background-color: $color-primary;
	border-radius: 2.5rem;
}

::-webkit-progress-bar,
progress {
	-webkit-appearance: none;
	appearance: none;
	background-color: $color-very-light-grey;
	color: $color-primary;
	border-radius: 2.5rem;
	height: 0.6rem;
	border: none;
	width: 100%;
	vertical-align: middle;
}

::-webkit-progress-value {
	background-color: $color-primary;
	border-radius: 2.5rem;
}

.slider {
	-webkit-appearance: none;
	width: 100%;
	height: 0.8rem;
	border-radius: 2.5rem;
	background: #d3d3d3;
	outline: none;
	-webkit-transition: 0.2s;
	transition: opacity 0.2s;
}

.slider::-webkit-slider-thumb {
	-webkit-appearance: none;
	appearance: none;
	width: 2.2rem;
	height: 2.2rem;
	border: none;
	outline: none;
	border-radius: 50%;
	background: $color-primary;
	cursor: pointer;
	transition: all 0.1s;

	&:hover {
		background-color: $color-primary-pastelle;
	}
}

.slider::-moz-range-thumb {
	width: 2.2rem;
	height: 2.2rem;
	border-radius: 50%;
	border: none;
	outline: none;
	background: $color-primary;
	cursor: pointer;
	transition: all 0.1s;

	&:hover {
		background-color: $color-primary-pastelle;
	}
}

.scroller,
.scroll-host {
	scrollbar-color: $color-tertiary $color-light-grey;
	scrollbar-width: thin;

	&::-webkit-scrollbar {
		width: 4px;
		height: 6px;
		background-color: $color-light-grey;
		border-radius: 10px;
	}

	&::-webkit-scrollbar-thumb {
		background: $color-tertiary;
		border-radius: 10px;
	}

	&.inverse {
		scrollbar-color: $color-tertiary $color-primary;
		&::-webkit-scrollbar {
			background-color: $color-primary;
		}

		&::-webkit-scrollbar-thumb {
			background: $color-tertiary;
		}
	}
}

.subtitle {
	font-size: 1.4rem;
	color: grey;
}

.truncate-text {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	display: inline-block;
	max-width: 100%;
}

.text-underline {
	transition: all 0.1s;
	text-decoration: underline;
	text-decoration-color: transparent;
	cursor: pointer;

	&:hover {
		text-decoration-color: $color-black;
	}
}

.wrapper {
	padding: 6rem 6rem 0 6rem;

	@include for-phone-only {
		padding: 3rem 3rem 0 3rem;
	}
}

@keyframes shine {
	to {
		background-position-x: -200%;
	}
}

.loading {
	background: $color-grey !important;
	background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%) !important;
	background-size: 200% 100% !important;

	animation: 1.5s shine linear infinite !important;
}

.sm-tag {
	@apply px-4;
	@apply py-1;
	@apply rounded-full;
}

@each $name, $map in $colors {
	.#{$name}-background {
		color: map-get($map, 'dark') !important;
		background-color: map-get($map, 'light') !important;
	}

	.#{$name}-color {
		color: map-get($map, 'dark') !important;
		border-color: map-get($map, 'dark') !important;

		h3 {
			color: map-get($map, 'dark') !important;
		}

		.img,
		&.img {
			fill: map-get($map, 'dark') !important;
		}

		progress[value]::-webkit-progress-value {
			color: map-get($map, 'dark') !important;
			background-color: map-get($map, 'dark') !important;
		}

		progress[value]::-moz-progress-bar {
			color: map-get($map, 'dark') !important;
			background-color: map-get($map, 'dark') !important;
		}
	}

	.#{$name}-calendar {
		.calendar-date {
			@extend .#{$name}-background;
			@extend .#{$name}-color;
			border-color: map-get($map, 'light') !important;
		}

		&:hover,
		&.active {
			.calendar-date {
				border-color: map-get($map, 'dark') !important;
			}
		}
	}

	.#{$name}-border-hover {
		.color {
			background-color: map-get($map, 'light') !important;
			border-color: map-get($map, 'light') !important;
		}

		&:hover,
		&.active {
			.color {
				border-color: map-get($map, 'dark') !important;
			}
		}
	}
}
